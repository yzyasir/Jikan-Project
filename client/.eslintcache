[{"C:\\Users\\yzyas\\onedrive\\desktop\\projectjikanaccel\\client\\src\\index.js":"1","C:\\Users\\yzyas\\onedrive\\desktop\\projectjikanaccel\\client\\src\\reportWebVitals.js":"2","C:\\Users\\yzyas\\onedrive\\desktop\\projectjikanaccel\\client\\src\\App.js":"3","C:\\Users\\yzyas\\onedrive\\desktop\\projectjikanaccel\\client\\src\\views\\Registration.jsx":"4","C:\\Users\\yzyas\\onedrive\\desktop\\projectjikanaccel\\client\\src\\components\\Form.jsx":"5"},{"size":500,"mtime":499162500000,"results":"6","hashOfConfig":"7"},{"size":362,"mtime":499162500000,"results":"8","hashOfConfig":"7"},{"size":313,"mtime":1607030652488,"results":"9","hashOfConfig":"7"},{"size":2389,"mtime":1607030299197,"results":"10","hashOfConfig":"7"},{"size":2655,"mtime":1607030763203,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"fn3kbz",{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"17","messages":"18","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"19","messages":"20","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"21"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\yzyas\\onedrive\\desktop\\projectjikanaccel\\client\\src\\index.js",[],"C:\\Users\\yzyas\\onedrive\\desktop\\projectjikanaccel\\client\\src\\reportWebVitals.js",[],["24","25"],"C:\\Users\\yzyas\\onedrive\\desktop\\projectjikanaccel\\client\\src\\App.js",[],"C:\\Users\\yzyas\\onedrive\\desktop\\projectjikanaccel\\client\\src\\views\\Registration.jsx",["26"],"import React, {useState} from 'react';\r\nimport axios from 'axios';\r\nimport Form from '../components/Form';\r\nimport { navigate } from '@reach/router';\r\n// import {navigate} from '@reach/router';\r\n\r\nconst Registration = (props) => {\r\n    // The logic for each form that I will be passing in will be different for the registration and edit pages\r\n    \r\n    const [form, setForm] = useState({\r\n        firstName: \"\",\r\n        lastName: \"\",\r\n        email: \"\",\r\n        password: \"\",\r\n    })\r\n\r\n    const [error, setError] = useState({});\r\n\r\n    const onChangeHandler = (eventProp) => { //we will be using this to update our data as we fill out the form, check console to see\r\n        eventProp.preventDefault(); //preventDefault is called on the event when submitting the form to prevent a browser reload/refresh. Try the code without it to see what happens.\r\n        setForm({\r\n            ...form,\r\n            [eventProp.target.firstName]: eventProp.target.value \r\n            //this needs to be eventProp.target.name so that the component in the form updates\r\n            //.target.value retrieves the value of whatever input it was called on, so whatever I insert in input can be accessed through event.target.value\r\n        })\r\n    }\r\n\r\n    const onSubmitHandler = (event) => {\r\n        event.preventDefault();\r\n        //this needs to be eventProp.target.name so that the component in the form updates\r\n        //.target.value retrieves the value of whatever input it was called on, so whatever I insert in input can be accessed through event.target.value\r\n        axios.post(\"http://localhost:8000/api/new/user\", form)\r\n        .then(res => {\r\n            if(res.data.error){ //this is basically asking res.data if it has any errors in it\r\n                console.log(res.data.error.errors)\r\n                // setError()\r\n            } else {\r\n                console.log(\"Hey, our on submit worked!\") //otherwise if all is good, let this happen then\r\n                navigate(\"/\") //navigates back to our front page \r\n            }\r\n        })\r\n        .catch(console.log(\"Hey, something went wrong\"))\r\n    } \r\n\r\n    return(\r\n        <div>\r\n            {/* Need to pass onChangeHandler into form to use it */}\r\n            <Form onSubmitHandler={onSubmitHandler} form={form} onChangeHandler={onChangeHandler} error={error} />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Registration;","C:\\Users\\yzyas\\onedrive\\desktop\\projectjikanaccel\\client\\src\\components\\Form.jsx",[],{"ruleId":"27","replacedBy":"28"},{"ruleId":"29","replacedBy":"30"},{"ruleId":"31","severity":1,"message":"32","line":17,"column":19,"nodeType":"33","messageId":"34","endLine":17,"endColumn":27},"no-native-reassign",["35"],"no-negated-in-lhs",["36"],"no-unused-vars","'setError' is assigned a value but never used.","Identifier","unusedVar","no-global-assign","no-unsafe-negation"]